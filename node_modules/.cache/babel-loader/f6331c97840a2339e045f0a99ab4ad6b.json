{"remainingRequest":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/babel-loader/lib/index.js!/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/src/components/test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/src/components/test.vue","mtime":1652690494729},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["test.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <!-- slot v-bind 将子组件数据传给父组件， 可以选择要显示的内容，例如只显示秒，或者只显示小时, 只需要用插槽，就把倒计时组件，也就是把子组件的值传递给父组件了-->\n    <slot v-bind=\"{\n      d: days,\n      h: hours,\n      m: mins,\n      s: seconds,\n      hh: `00${hours}`.slice(-2),\n      mm: `00${mins}`.slice(-2),\n      ss: `00${seconds}`.slice(-2)\n    }\"></slot>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'BaseCounter',\n    props: {\n      // 后台返回的时间戳\n      time: {\n        type:Number | String,\n        default: 0\n      },\n      refreshCounter: {\n        type: Number | String,\n        default: 0\n      },\n      // 到期时间\n      end: {\n        type: Number | String,\n        default: 0\n      },\n      // 区分传入的事秒还是毫秒\n      isMiniSecond: {\n        type: Boolean,\n        default: false\n      }\n    },\n\n    computed: {\n      // 将获取到的时候进行转化，不管time是毫秒还是秒都转化成秒\n      // 「+」’号。接口返回的一串数字有时候是字符串的形式，有时候是数字的形式（~不能过分相信后端同学，必须自己做好防范~）。所以通过前面加个‘「+」’号 通通转化为数字。\n      duration() {\n        // 处理传入到期时间\n        if (this.end) {\n          let end = String(this.end).length >= 13 ? +this.end : +this.end * 1000\n          end -= Date.now()\n          return end\n        }\n        // 处理入剩余时间\n        const time = this.isMiniSecond ? Math.round(+this.time / 1000) : Math.round(+this.time)\n        return time\n      }\n    },\n\n    data() {\n      return {\n        days: '0',\n        hours: '00',\n        mins: '00',\n        seconds: '00',\n        timer: null,\n        curTime: 0 // 当前的时刻，也就是显示在页面上的那个时刻\n      }\n    },\n\n    methods: {\n      // 将duration转化成天数，小时，分钟，秒数的方法\n      durationFormatter(time) {\n        if (!time) return { ss: 0 };\n        let t = time;\n        const ss = t % 60;\n        t = (t - ss) / 60;\n        if (t < 1) return { ss };\n        const mm = t % 60\n        t = (t - mm) / 60\n        if (t < 1) return { mm, ss }\n        const hh = t % 24\n        t = (t - hh) / 24\n        if (t < 1) return { hh, mm, ss }\n        const dd = t\n        return { dd, hh, mm, ss }\n      },\n      // 开始执行倒计时的方法\n      countDown() {\n        // 记录下当前时间\n        this.curTime = Date.now()\n        this.getTime(this.duration)\n      },\n      // 倒计时方法\n      getTime(time) {\n        this.timer && clearTimeout(this.timer)\n        if (time < 0) return\n        const { dd, hh, mm, ss } = this.durationFormatter(time)\n        this.days = dd || 0\n        this.hours = hh || 0\n        this.mins = mm || 0\n        this.seconds = ss || 0\n        this.timer = setTimeout(() => {\n          /*\n            出于节能的考虑, 部分浏览器在进入后台时(或者失去焦点时), 「会将 setTimeout 等定时任务暂停 待用户回到浏览器时, 才会重新激活定时任务」\n            说是暂停, 其实应该说是延迟, 1s 的任务延迟到 2s, 2s 的延迟到 5s, 实际情况因浏览器而异。\n            原来如此，看来不能每次都只是减1这么简单了（毕竟你把浏览器切到后台之后setTimeout就冷却了，等几秒后切回，然后执行setTimeout，只是减了一秒而已）。\n          */\n          // now 是 setTimeout的回调函数执行的时候的那个时刻。记录当前这个setTimeout的回调函数执行的时间点。\n          const now = Date.now()\n          // 当前这个setTimeout的回调函数执行的时刻距离上 页面上的剩余时间上一次变化的时间段」。其实也就是 「当前这个setTimeout的回调函数执行的时刻距离上 一个setTimeout的回调函数执行的时刻时间段。」\n          // 记录当前这个setTimeout的回调函数执行的时间点距离页面上开始 渲染 剩余时间的 这一段时间。其实此时的diffTime就是=1。\n          const diffTime = Math.floor((now - this.curTime) / 1000)\n          // 在手机端页面回退到后台的时候不会计时，对比时间差，大于1s的重置倒计时\n          const step = diffTime > 1 ? diffTime : 1\n          // 将curTime的值变成当前这个setTimeout的回调函数执行的时间点。\n          this.curTime = now\n          this.getTime(time - step)\n        }, 1000)\n      }\n    },\n\n    mounted() {\n      this.countDown()\n    },\n\n    watch: {\n      duration() {\n        this.countDown()\n      },\n      refreshCounter() {\n        this.countDown()\n      }\n    }\n  }\n\n  /*\n    // 原创连接https://mp.weixin.qq.com/s/Edk-0pVDZWOkkfZ2mPiCnw\n    总结：\n      1、 为什么要「用setTimeout来模拟setInterval的行为」？\n          可以看看setInterval有什么缺点：\n          定时器指定的时间间隔，表示的是何时将定时器的代码添加到消息队列，而不是合适执行代码，所以真正何时执行代码的时间是不能保证的，而是取决于何时被主线程的事件循环取到并执行。\n          setInterval(fun, n) // 每隔n秒把fun事件推到消息队列中；\n          setInterval有两个缺点：（1）使用setInterval时，某些间隔会被跳过；（2）可能有多个定时器会连续执行；\n          可以这么理解：每个setTimeout产生的任务会直接push到任务队列中，而setInterval在每次把任务push到任务队列前，都要进行一下判断看上次的任务是否仍在队列中；因而采用setTimeout来规避上面的缺点。\n\n      2、为什么要clearTimeout(this.timer)\n          假设现在页面显示的是活动一的时间，这时，执行到setTimeout，在「一秒后」就会把setTimeout里的回调函数放到任务队列中，「注意是一秒后哦」！这时，然而，在这一秒的开头，我们点击了活动二按钮，这时候的活动二的时间就会传入倒计时组件中，然后触发countDown(),也就调用this.getTime(this.duration);，然后执行到setTimeout，也会一秒后把回调函数放到任务队列中。\n          这时，任务队列中就会有两个setTimeout的回调函数了。等待一秒过去，两个回调函数相继执行，我们就会看到页面上的时间一下子背减了2，实际上是很快速地进行了两遍减1的操作。\n          这就是为什么要添加上this.timer && clearTimeout(this.timer);这一句的原因了。就是要把上一个setTimeout清除掉。\n  */\n\n</script>\n\n"],"sourceRoot":"src/components"}]}