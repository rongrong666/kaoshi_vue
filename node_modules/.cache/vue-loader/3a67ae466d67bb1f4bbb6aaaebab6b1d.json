{"remainingRequest":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/src/components/test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/src/components/test.vue","mtime":1652690494729},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rongrong/Desktop/代码文件/前端测试项目/vuecli/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmFzZUNvdW50ZXInLAogIHByb3BzOiB7CiAgICAvLyDlkI7lj7Dov5Tlm57nmoTml7bpl7TmiLMKICAgIHRpbWU6IHsKICAgICAgdHlwZTpOdW1iZXIgfCBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICByZWZyZXNoQ291bnRlcjogewogICAgICB0eXBlOiBOdW1iZXIgfCBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICAvLyDliLDmnJ/ml7bpl7QKICAgIGVuZDogewogICAgICB0eXBlOiBOdW1iZXIgfCBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICAvLyDljLrliIbkvKDlhaXnmoTkuovnp5Lov5jmmK/mr6vnp5IKICAgIGlzTWluaVNlY29uZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAvLyDlsIbojrflj5bliLDnmoTml7blgJnov5vooYzovazljJbvvIzkuI3nrqF0aW1l5piv5q+r56eS6L+Y5piv56eS6YO96L2s5YyW5oiQ56eSCiAgICAvLyDjgIwr44CN4oCZ5Y+344CC5o6l5Y+j6L+U5Zue55qE5LiA5Liy5pWw5a2X5pyJ5pe25YCZ5piv5a2X56ym5Liy55qE5b2i5byP77yM5pyJ5pe25YCZ5piv5pWw5a2X55qE5b2i5byP77yIfuS4jeiDvei/h+WIhuebuOS/oeWQjuerr+WQjOWtpu+8jOW/hemhu+iHquW3seWBmuWlvemYsuiMg37vvInjgILmiYDku6XpgJrov4fliY3pnaLliqDkuKrigJjjgIwr44CN4oCZ5Y+3IOmAmumAmui9rOWMluS4uuaVsOWtl+OAggogICAgZHVyYXRpb24oKSB7CiAgICAgIC8vIOWkhOeQhuS8oOWFpeWIsOacn+aXtumXtAogICAgICBpZiAodGhpcy5lbmQpIHsKICAgICAgICBsZXQgZW5kID0gU3RyaW5nKHRoaXMuZW5kKS5sZW5ndGggPj0gMTMgPyArdGhpcy5lbmQgOiArdGhpcy5lbmQgKiAxMDAwCiAgICAgICAgZW5kIC09IERhdGUubm93KCkKICAgICAgICByZXR1cm4gZW5kCiAgICAgIH0KICAgICAgLy8g5aSE55CG5YWl5Ymp5L2Z5pe26Ze0CiAgICAgIGNvbnN0IHRpbWUgPSB0aGlzLmlzTWluaVNlY29uZCA/IE1hdGgucm91bmQoK3RoaXMudGltZSAvIDEwMDApIDogTWF0aC5yb3VuZCgrdGhpcy50aW1lKQogICAgICByZXR1cm4gdGltZQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXlzOiAnMCcsCiAgICAgIGhvdXJzOiAnMDAnLAogICAgICBtaW5zOiAnMDAnLAogICAgICBzZWNvbmRzOiAnMDAnLAogICAgICB0aW1lcjogbnVsbCwKICAgICAgY3VyVGltZTogMCAvLyDlvZPliY3nmoTml7bliLvvvIzkuZ/lsLHmmK/mmL7npLrlnKjpobXpnaLkuIrnmoTpgqPkuKrml7bliLsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICAvLyDlsIZkdXJhdGlvbui9rOWMluaIkOWkqeaVsO+8jOWwj+aXtu+8jOWIhumSn++8jOenkuaVsOeahOaWueazlQogICAgZHVyYXRpb25Gb3JtYXR0ZXIodGltZSkgewogICAgICBpZiAoIXRpbWUpIHJldHVybiB7IHNzOiAwIH07CiAgICAgIGxldCB0ID0gdGltZTsKICAgICAgY29uc3Qgc3MgPSB0ICUgNjA7CiAgICAgIHQgPSAodCAtIHNzKSAvIDYwOwogICAgICBpZiAodCA8IDEpIHJldHVybiB7IHNzIH07CiAgICAgIGNvbnN0IG1tID0gdCAlIDYwCiAgICAgIHQgPSAodCAtIG1tKSAvIDYwCiAgICAgIGlmICh0IDwgMSkgcmV0dXJuIHsgbW0sIHNzIH0KICAgICAgY29uc3QgaGggPSB0ICUgMjQKICAgICAgdCA9ICh0IC0gaGgpIC8gMjQKICAgICAgaWYgKHQgPCAxKSByZXR1cm4geyBoaCwgbW0sIHNzIH0KICAgICAgY29uc3QgZGQgPSB0CiAgICAgIHJldHVybiB7IGRkLCBoaCwgbW0sIHNzIH0KICAgIH0sCiAgICAvLyDlvIDlp4vmiafooYzlgJLorqHml7bnmoTmlrnms5UKICAgIGNvdW50RG93bigpIHsKICAgICAgLy8g6K6w5b2V5LiL5b2T5YmN5pe26Ze0CiAgICAgIHRoaXMuY3VyVGltZSA9IERhdGUubm93KCkKICAgICAgdGhpcy5nZXRUaW1lKHRoaXMuZHVyYXRpb24pCiAgICB9LAogICAgLy8g5YCS6K6h5pe25pa55rOVCiAgICBnZXRUaW1lKHRpbWUpIHsKICAgICAgdGhpcy50aW1lciAmJiBjbGVhclRpbWVvdXQodGhpcy50aW1lcikKICAgICAgaWYgKHRpbWUgPCAwKSByZXR1cm4KICAgICAgY29uc3QgeyBkZCwgaGgsIG1tLCBzcyB9ID0gdGhpcy5kdXJhdGlvbkZvcm1hdHRlcih0aW1lKQogICAgICB0aGlzLmRheXMgPSBkZCB8fCAwCiAgICAgIHRoaXMuaG91cnMgPSBoaCB8fCAwCiAgICAgIHRoaXMubWlucyA9IG1tIHx8IDAKICAgICAgdGhpcy5zZWNvbmRzID0gc3MgfHwgMAogICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgLyoKICAgICAgICAgIOWHuuS6juiKguiDveeahOiAg+iZkSwg6YOo5YiG5rWP6KeI5Zmo5Zyo6L+b5YWl5ZCO5Y+w5pe2KOaIluiAheWkseWOu+eEpueCueaXtiksIOOAjOS8muWwhiBzZXRUaW1lb3V0IOetieWumuaXtuS7u+WKoeaaguWBnCDlvoXnlKjmiLflm57liLDmtY/op4jlmajml7YsIOaJjeS8mumHjeaWsOa/gOa0u+WumuaXtuS7u+WKoeOAjQogICAgICAgICAg6K+05piv5pqC5YGcLCDlhbblrp7lupTor6Xor7TmmK/lu7bov58sIDFzIOeahOS7u+WKoeW7tui/n+WIsCAycywgMnMg55qE5bu26L+f5YiwIDVzLCDlrp7pmYXmg4XlhrXlm6DmtY/op4jlmajogIzlvILjgIIKICAgICAgICAgIOWOn+adpeWmguatpO+8jOeci+adpeS4jeiDveavj+asoemDveWPquaYr+WHjzHov5nkuYjnroDljZXkuobvvIjmr5Xnq5/kvaDmiormtY/op4jlmajliIfliLDlkI7lj7DkuYvlkI5zZXRUaW1lb3V05bCx5Ya35Y205LqG77yM562J5Yeg56eS5ZCO5YiH5Zue77yM54S25ZCO5omn6KGMc2V0VGltZW91dO+8jOWPquaYr+WHj+S6huS4gOenkuiAjOW3su+8ieOAggogICAgICAgICovCiAgICAgICAgLy8gbm93IOaYryBzZXRUaW1lb3V055qE5Zue6LCD5Ye95pWw5omn6KGM55qE5pe25YCZ55qE6YKj5Liq5pe25Yi744CC6K6w5b2V5b2T5YmN6L+Z5Liqc2V0VGltZW91dOeahOWbnuiwg+WHveaVsOaJp+ihjOeahOaXtumXtOeCueOAggogICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCkKICAgICAgICAvLyDlvZPliY3ov5nkuKpzZXRUaW1lb3V055qE5Zue6LCD5Ye95pWw5omn6KGM55qE5pe25Yi76Led56a75LiKIOmhtemdouS4iueahOWJqeS9meaXtumXtOS4iuS4gOasoeWPmOWMlueahOaXtumXtOauteOAjeOAguWFtuWunuS5n+WwseaYryDjgIzlvZPliY3ov5nkuKpzZXRUaW1lb3V055qE5Zue6LCD5Ye95pWw5omn6KGM55qE5pe25Yi76Led56a75LiKIOS4gOS4qnNldFRpbWVvdXTnmoTlm57osIPlh73mlbDmiafooYznmoTml7bliLvml7bpl7TmrrXjgILjgI0KICAgICAgICAvLyDorrDlvZXlvZPliY3ov5nkuKpzZXRUaW1lb3V055qE5Zue6LCD5Ye95pWw5omn6KGM55qE5pe26Ze054K56Led56a76aG16Z2i5LiK5byA5aeLIOa4suafkyDliankvZnml7bpl7TnmoQg6L+Z5LiA5q615pe26Ze044CC5YW25a6e5q2k5pe255qEZGlmZlRpbWXlsLHmmK89MeOAggogICAgICAgIGNvbnN0IGRpZmZUaW1lID0gTWF0aC5mbG9vcigobm93IC0gdGhpcy5jdXJUaW1lKSAvIDEwMDApCiAgICAgICAgLy8g5Zyo5omL5py656uv6aG16Z2i5Zue6YCA5Yiw5ZCO5Y+w55qE5pe25YCZ5LiN5Lya6K6h5pe277yM5a+55q+U5pe26Ze05beu77yM5aSn5LqOMXPnmoTph43nva7lgJLorqHml7YKICAgICAgICBjb25zdCBzdGVwID0gZGlmZlRpbWUgPiAxID8gZGlmZlRpbWUgOiAxCiAgICAgICAgLy8g5bCGY3VyVGltZeeahOWAvOWPmOaIkOW9k+WJjei/meS4qnNldFRpbWVvdXTnmoTlm57osIPlh73mlbDmiafooYznmoTml7bpl7TngrnjgIIKICAgICAgICB0aGlzLmN1clRpbWUgPSBub3cKICAgICAgICB0aGlzLmdldFRpbWUodGltZSAtIHN0ZXApCiAgICAgIH0sIDEwMDApCiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuY291bnREb3duKCkKICB9LAoKICB3YXRjaDogewogICAgZHVyYXRpb24oKSB7CiAgICAgIHRoaXMuY291bnREb3duKCkKICAgIH0sCiAgICByZWZyZXNoQ291bnRlcigpIHsKICAgICAgdGhpcy5jb3VudERvd24oKQogICAgfQogIH0KfQoKLyoKICAvLyDljp/liJvov57mjqVodHRwczovL21wLndlaXhpbi5xcS5jb20vcy9FZGstMHBWRFpXT2trZloybVBpQ253CiAg5oC757uT77yaCiAgICAx44CBIOS4uuS7gOS5iOimgeOAjOeUqHNldFRpbWVvdXTmnaXmqKHmi59zZXRJbnRlcnZhbOeahOihjOS4uuOAje+8nwogICAgICAgIOWPr+S7peeci+eci3NldEludGVydmFs5pyJ5LuA5LmI57y654K577yaCiAgICAgICAg5a6a5pe25Zmo5oyH5a6a55qE5pe26Ze06Ze06ZqU77yM6KGo56S655qE5piv5L2V5pe25bCG5a6a5pe25Zmo55qE5Luj56CB5re75Yqg5Yiw5raI5oGv6Zif5YiX77yM6ICM5LiN5piv5ZCI6YCC5omn6KGM5Luj56CB77yM5omA5Lul55yf5q2j5L2V5pe25omn6KGM5Luj56CB55qE5pe26Ze05piv5LiN6IO95L+d6K+B55qE77yM6ICM5piv5Y+W5Yaz5LqO5L2V5pe26KKr5Li757q/56iL55qE5LqL5Lu25b6q546v5Y+W5Yiw5bm25omn6KGM44CCCiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuLCBuKSAvLyDmr4/pmpRu56eS5oqKZnVu5LqL5Lu25o6o5Yiw5raI5oGv6Zif5YiX5Lit77ybCiAgICAgICAgc2V0SW50ZXJ2YWzmnInkuKTkuKrnvLrngrnvvJrvvIgx77yJ5L2/55Soc2V0SW50ZXJ2YWzml7bvvIzmn5Dkupvpl7TpmpTkvJrooqvot7Pov4fvvJvvvIgy77yJ5Y+v6IO95pyJ5aSa5Liq5a6a5pe25Zmo5Lya6L+e57ut5omn6KGM77ybCiAgICAgICAg5Y+v5Lul6L+Z5LmI55CG6Kej77ya5q+P5Liqc2V0VGltZW91dOS6p+eUn+eahOS7u+WKoeS8muebtOaOpXB1c2jliLDku7vliqHpmJ/liJfkuK3vvIzogIxzZXRJbnRlcnZhbOWcqOavj+asoeaKiuS7u+WKoXB1c2jliLDku7vliqHpmJ/liJfliY3vvIzpg73opoHov5vooYzkuIDkuIvliKTmlq3nnIvkuIrmrKHnmoTku7vliqHmmK/lkKbku43lnKjpmJ/liJfkuK3vvJvlm6DogIzph4fnlKhzZXRUaW1lb3V05p2l6KeE6YG/5LiK6Z2i55qE57y654K544CCCgogICAgMuOAgeS4uuS7gOS5iOimgWNsZWFyVGltZW91dCh0aGlzLnRpbWVyKQogICAgICAgIOWBh+iuvueOsOWcqOmhtemdouaYvuekuueahOaYr+a0u+WKqOS4gOeahOaXtumXtO+8jOi/meaXtu+8jOaJp+ihjOWIsHNldFRpbWVvdXTvvIzlnKjjgIzkuIDnp5LlkI7jgI3lsLHkvJrmiopzZXRUaW1lb3V06YeM55qE5Zue6LCD5Ye95pWw5pS+5Yiw5Lu75Yqh6Zif5YiX5Lit77yM44CM5rOo5oSP5piv5LiA56eS5ZCO5ZOm44CN77yB6L+Z5pe277yM54S26ICM77yM5Zyo6L+Z5LiA56eS55qE5byA5aS077yM5oiR5Lus54K55Ye75LqG5rS75Yqo5LqM5oyJ6ZKu77yM6L+Z5pe25YCZ55qE5rS75Yqo5LqM55qE5pe26Ze05bCx5Lya5Lyg5YWl5YCS6K6h5pe257uE5Lu25Lit77yM54S25ZCO6Kem5Y+RY291bnREb3duKCks5Lmf5bCx6LCD55SodGhpcy5nZXRUaW1lKHRoaXMuZHVyYXRpb24pO++8jOeEtuWQjuaJp+ihjOWIsHNldFRpbWVvdXTvvIzkuZ/kvJrkuIDnp5LlkI7miorlm57osIPlh73mlbDmlL7liLDku7vliqHpmJ/liJfkuK3jgIIKICAgICAgICDov5nml7bvvIzku7vliqHpmJ/liJfkuK3lsLHkvJrmnInkuKTkuKpzZXRUaW1lb3V055qE5Zue6LCD5Ye95pWw5LqG44CC562J5b6F5LiA56eS6L+H5Y6777yM5Lik5Liq5Zue6LCD5Ye95pWw55u457un5omn6KGM77yM5oiR5Lus5bCx5Lya55yL5Yiw6aG16Z2i5LiK55qE5pe26Ze05LiA5LiL5a2Q6IOM5YeP5LqGMu+8jOWunumZheS4iuaYr+W+iOW/q+mAn+WcsOi/m+ihjOS6huS4pOmBjeWHjzHnmoTmk43kvZzjgIIKICAgICAgICDov5nlsLHmmK/kuLrku4DkuYjopoHmt7vliqDkuIp0aGlzLnRpbWVyICYmIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTvov5nkuIDlj6XnmoTljp/lm6DkuobjgILlsLHmmK/opoHmiorkuIrkuIDkuKpzZXRUaW1lb3V05riF6Zmk5o6J44CCCiovCgo="},{"version":3,"sources":["test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"test.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"content\">\n    <!-- slot v-bind 将子组件数据传给父组件， 可以选择要显示的内容，例如只显示秒，或者只显示小时, 只需要用插槽，就把倒计时组件，也就是把子组件的值传递给父组件了-->\n    <slot v-bind=\"{\n      d: days,\n      h: hours,\n      m: mins,\n      s: seconds,\n      hh: `00${hours}`.slice(-2),\n      mm: `00${mins}`.slice(-2),\n      ss: `00${seconds}`.slice(-2)\n    }\"></slot>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'BaseCounter',\n    props: {\n      // 后台返回的时间戳\n      time: {\n        type:Number | String,\n        default: 0\n      },\n      refreshCounter: {\n        type: Number | String,\n        default: 0\n      },\n      // 到期时间\n      end: {\n        type: Number | String,\n        default: 0\n      },\n      // 区分传入的事秒还是毫秒\n      isMiniSecond: {\n        type: Boolean,\n        default: false\n      }\n    },\n\n    computed: {\n      // 将获取到的时候进行转化，不管time是毫秒还是秒都转化成秒\n      // 「+」’号。接口返回的一串数字有时候是字符串的形式，有时候是数字的形式（~不能过分相信后端同学，必须自己做好防范~）。所以通过前面加个‘「+」’号 通通转化为数字。\n      duration() {\n        // 处理传入到期时间\n        if (this.end) {\n          let end = String(this.end).length >= 13 ? +this.end : +this.end * 1000\n          end -= Date.now()\n          return end\n        }\n        // 处理入剩余时间\n        const time = this.isMiniSecond ? Math.round(+this.time / 1000) : Math.round(+this.time)\n        return time\n      }\n    },\n\n    data() {\n      return {\n        days: '0',\n        hours: '00',\n        mins: '00',\n        seconds: '00',\n        timer: null,\n        curTime: 0 // 当前的时刻，也就是显示在页面上的那个时刻\n      }\n    },\n\n    methods: {\n      // 将duration转化成天数，小时，分钟，秒数的方法\n      durationFormatter(time) {\n        if (!time) return { ss: 0 };\n        let t = time;\n        const ss = t % 60;\n        t = (t - ss) / 60;\n        if (t < 1) return { ss };\n        const mm = t % 60\n        t = (t - mm) / 60\n        if (t < 1) return { mm, ss }\n        const hh = t % 24\n        t = (t - hh) / 24\n        if (t < 1) return { hh, mm, ss }\n        const dd = t\n        return { dd, hh, mm, ss }\n      },\n      // 开始执行倒计时的方法\n      countDown() {\n        // 记录下当前时间\n        this.curTime = Date.now()\n        this.getTime(this.duration)\n      },\n      // 倒计时方法\n      getTime(time) {\n        this.timer && clearTimeout(this.timer)\n        if (time < 0) return\n        const { dd, hh, mm, ss } = this.durationFormatter(time)\n        this.days = dd || 0\n        this.hours = hh || 0\n        this.mins = mm || 0\n        this.seconds = ss || 0\n        this.timer = setTimeout(() => {\n          /*\n            出于节能的考虑, 部分浏览器在进入后台时(或者失去焦点时), 「会将 setTimeout 等定时任务暂停 待用户回到浏览器时, 才会重新激活定时任务」\n            说是暂停, 其实应该说是延迟, 1s 的任务延迟到 2s, 2s 的延迟到 5s, 实际情况因浏览器而异。\n            原来如此，看来不能每次都只是减1这么简单了（毕竟你把浏览器切到后台之后setTimeout就冷却了，等几秒后切回，然后执行setTimeout，只是减了一秒而已）。\n          */\n          // now 是 setTimeout的回调函数执行的时候的那个时刻。记录当前这个setTimeout的回调函数执行的时间点。\n          const now = Date.now()\n          // 当前这个setTimeout的回调函数执行的时刻距离上 页面上的剩余时间上一次变化的时间段」。其实也就是 「当前这个setTimeout的回调函数执行的时刻距离上 一个setTimeout的回调函数执行的时刻时间段。」\n          // 记录当前这个setTimeout的回调函数执行的时间点距离页面上开始 渲染 剩余时间的 这一段时间。其实此时的diffTime就是=1。\n          const diffTime = Math.floor((now - this.curTime) / 1000)\n          // 在手机端页面回退到后台的时候不会计时，对比时间差，大于1s的重置倒计时\n          const step = diffTime > 1 ? diffTime : 1\n          // 将curTime的值变成当前这个setTimeout的回调函数执行的时间点。\n          this.curTime = now\n          this.getTime(time - step)\n        }, 1000)\n      }\n    },\n\n    mounted() {\n      this.countDown()\n    },\n\n    watch: {\n      duration() {\n        this.countDown()\n      },\n      refreshCounter() {\n        this.countDown()\n      }\n    }\n  }\n\n  /*\n    // 原创连接https://mp.weixin.qq.com/s/Edk-0pVDZWOkkfZ2mPiCnw\n    总结：\n      1、 为什么要「用setTimeout来模拟setInterval的行为」？\n          可以看看setInterval有什么缺点：\n          定时器指定的时间间隔，表示的是何时将定时器的代码添加到消息队列，而不是合适执行代码，所以真正何时执行代码的时间是不能保证的，而是取决于何时被主线程的事件循环取到并执行。\n          setInterval(fun, n) // 每隔n秒把fun事件推到消息队列中；\n          setInterval有两个缺点：（1）使用setInterval时，某些间隔会被跳过；（2）可能有多个定时器会连续执行；\n          可以这么理解：每个setTimeout产生的任务会直接push到任务队列中，而setInterval在每次把任务push到任务队列前，都要进行一下判断看上次的任务是否仍在队列中；因而采用setTimeout来规避上面的缺点。\n\n      2、为什么要clearTimeout(this.timer)\n          假设现在页面显示的是活动一的时间，这时，执行到setTimeout，在「一秒后」就会把setTimeout里的回调函数放到任务队列中，「注意是一秒后哦」！这时，然而，在这一秒的开头，我们点击了活动二按钮，这时候的活动二的时间就会传入倒计时组件中，然后触发countDown(),也就调用this.getTime(this.duration);，然后执行到setTimeout，也会一秒后把回调函数放到任务队列中。\n          这时，任务队列中就会有两个setTimeout的回调函数了。等待一秒过去，两个回调函数相继执行，我们就会看到页面上的时间一下子背减了2，实际上是很快速地进行了两遍减1的操作。\n          这就是为什么要添加上this.timer && clearTimeout(this.timer);这一句的原因了。就是要把上一个setTimeout清除掉。\n  */\n\n</script>\n\n"]}]}